
@use '@angular/material' as mat;

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$myFlix-Angular-client-primary: mat.define-palette(mat.$indigo-palette);
$myFlix-Angular-client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$myFlix-Angular-client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$myFlix-Angular-client-theme: mat.define-light-theme((
  color: (
    primary: $myFlix-Angular-client-primary,
    accent: $myFlix-Angular-client-accent,
    warn: $myFlix-Angular-client-warn,
  )
));

.movie-cover {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.movie-card {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  margin: 10px;
}

mat-card-title,
mat-card-subtitle {
  text-align: center;
  min-height: 25px;
}

.favorite-movies,
.movie-list {
  display: grid;
  justify-content: center;
}

.nav-button {
  color: white;
  background-color: var(primary);
}

.movie-dialog-button {
  color: red;
}



@include mat.all-component-themes($myFlix-Angular-client-theme);
